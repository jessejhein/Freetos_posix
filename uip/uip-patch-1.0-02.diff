### Eclipse Workspace Patch 1.0
#P uip
Index: uip/uip.c
===================================================================
RCS file: /cvsroot/uip-stack/uip/uip/uip.c,v
retrieving revision 1.1
diff -u -r1.1 uip.c
--- uip/uip.c	4 Jan 2007 11:06:41 -0000	1.1
+++ uip/uip.c	20 Feb 2009 09:17:29 -0000
@@ -1,4 +1,4 @@
-#define DEBUG_PRINTF(...) /*printf(__VA_ARGS__)*/
+//#define DEBUG_PRINTF(...) /*printf(__VA_ARGS__)*/
 
 /**
  * \defgroup uip The uIP TCP/IP stack
@@ -320,7 +320,7 @@
   u16_t sum;
 
   sum = chksum(0, &uip_buf[UIP_LLH_LEN], UIP_IPH_LEN);
-  DEBUG_PRINTF("uip_ipchksum: sum 0x%04x\n", sum);
+//  DEBUG_PRINTF("uip_ipchksum: sum 0x%04x\n", sum);
   return (sum == 0) ? 0xffff : htons(sum);
 }
 #endif
@@ -907,7 +907,7 @@
     /* If IP broadcast support is configured, we check for a broadcast
        UDP packet, which may be destined to us. */
 #if UIP_BROADCAST
-    DEBUG_PRINTF("UDP IP checksum 0x%04x\n", uip_ipchksum());
+//    DEBUG_PRINTF("UDP IP checksum 0x%04x\n", uip_ipchksum());
     if(BUF->proto == UIP_PROTO_UDP &&
        uip_ipaddr_cmp(BUF->destipaddr, all_ones_addr)
        /*&&
@@ -1012,7 +1012,7 @@
 #else /* !UIP_CONF_IPV6 */
 
   /* This is IPv6 ICMPv6 processing code. */
-  DEBUG_PRINTF("icmp6_input: length %d\n", uip_len);
+//  DEBUG_PRINTF("icmp6_input: length %d\n", uip_len);
 
   if(BUF->proto != UIP_PROTO_ICMP6) { /* We only allow ICMPv6 packets from
 					 here. */
@@ -1067,7 +1067,7 @@
     UIP_STAT(++uip_stat.icmp.sent);
     goto send;
   } else {
-    DEBUG_PRINTF("Unknown icmp6 message type %d\n", ICMPBUF->type);
+ //   DEBUG_PRINTF("Unknown icmp6 message type %d\n", ICMPBUF->type);
     UIP_STAT(++uip_stat.icmp.drop);
     UIP_STAT(++uip_stat.icmp.typeerr);
     UIP_LOG("icmp: unknown ICMP message.");
@@ -1860,13 +1860,13 @@
   /* Calculate IP checksum. */
   BUF->ipchksum = 0;
   BUF->ipchksum = ~(uip_ipchksum());
-  DEBUG_PRINTF("uip ip_send_nolen: chkecum 0x%04x\n", uip_ipchksum());
+//  DEBUG_PRINTF("uip ip_send_nolen: chkecum 0x%04x\n", uip_ipchksum());
 #endif /* UIP_CONF_IPV6 */
    
   UIP_STAT(++uip_stat.tcp.sent);
  send:
-  DEBUG_PRINTF("Sending packet with length %d (%d)\n", uip_len,
-	       (BUF->len[0] << 8) | BUF->len[1]);
+//  DEBUG_PRINTF("Sending packet with length %d (%d)\n", uip_len,
+//	       (BUF->len[0] << 8) | BUF->len[1]);
   
   UIP_STAT(++uip_stat.ip.sent);
   /* Return and let the caller do the actual transmission. */
Index: uip/uip.h
===================================================================
RCS file: /cvsroot/uip-stack/uip/uip/uip.h,v
retrieving revision 1.1
diff -u -r1.1 uip.h
--- uip/uip.h	4 Jan 2007 11:06:41 -0000	1.1
+++ uip/uip.h	20 Feb 2009 09:17:30 -0000
@@ -1067,7 +1067,7 @@
 #   if UIP_BYTE_ORDER == UIP_BIG_ENDIAN
 #      define HTONS(n) (n)
 #   else /* UIP_BYTE_ORDER == UIP_BIG_ENDIAN */
-#      define HTONS(n) (u16_t)((((u16_t) (n)) << 8) | (((u16_t) (n)) >> 8))
+#      define HTONS(n) (u16_t)(((((u16_t) (n)) << 8)&0xff00) | ((((u16_t) (n)) >> 8)&0x00ff)) 
 #   endif /* UIP_BYTE_ORDER == UIP_BIG_ENDIAN */
 #else
 #error "HTONS already defined!"
Index: uip/psock.c
===================================================================
RCS file: /cvsroot/uip-stack/uip/uip/psock.c,v
retrieving revision 1.1
diff -u -r1.1 psock.c
--- uip/psock.c	4 Jan 2007 11:06:40 -0000	1.1
+++ uip/psock.c	20 Feb 2009 09:17:29 -0000
@@ -185,7 +185,7 @@
 
   /* Save the length of and a pointer to the data that is to be
      sent. */
-  s->sendptr = buf;
+  s->sendptr = (u8_t*)buf;
   s->sendlen = len;
 
   s->state = STATE_NONE;
@@ -273,7 +273,7 @@
 {
   PT_BEGIN(&psock->psockpt);
 
-  buf_setup(&psock->buf, psock->bufptr, psock->bufsize);
+  buf_setup(&psock->buf, (u8_t*)(psock->bufptr), psock->bufsize);
   
   /* XXX: Should add buf_checkmarker() before do{} loop, if
      incoming data has been handled while waiting for a write. */
@@ -300,7 +300,7 @@
 {
   PT_BEGIN(&psock->psockpt);
 
-  buf_setup(&psock->buf, psock->bufptr, psock->bufsize);
+  buf_setup(&psock->buf, (u8_t*)(psock->bufptr), psock->bufsize);
   
   /* XXX: Should add buf_checkmarker() before do{} loop, if
      incoming data has been handled while waiting for a write. */
@@ -331,7 +331,7 @@
   psock->readlen = 0;
   psock->bufptr = buffer;
   psock->bufsize = buffersize;
-  buf_setup(&psock->buf, buffer, buffersize);
+  buf_setup(&psock->buf, (u8_t*)buffer, buffersize);
   PT_INIT(&psock->pt);
   PT_INIT(&psock->psockpt);
 }
Index: .project
===================================================================
RCS file: .project
diff -N .project
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ .project	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>uip</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+	</buildSpec>
+	<natures>
+	</natures>
+</projectDescription>
